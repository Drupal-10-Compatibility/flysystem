diff --git a/src/Asset/AssetDumper.php b/src/Asset/AssetDumper.php
index 1120f76..d4d90dd 100644
--- a/src/Asset/AssetDumper.php
+++ b/src/Asset/AssetDumper.php
@@ -39,7 +39,8 @@ class AssetDumper extends DrupalAssetDumper {
     // file) in generating the file anyway. Sites on servers where rewrite rules
     // aren't working can set css.gzip to FALSE in order to skip
     // generating a file that won't be used.
-    if (extension_loaded('zlib') && \Drupal::config('system.performance')->get($file_extension . '.gzip')) { // @phpstan-ignore-line
+    // @phpstan-ignore-line
+    if (extension_loaded('zlib') && \Drupal::config('system.performance')->get($file_extension . '.gzip')) {
       if (!file_exists($uri . '.gz') && !$this->fileSystem->saveData(gzencode($data, 9, FORCE_GZIP), $uri . '.gz', FileExists::Replace)) {
         return FALSE;
       }
diff --git a/src/Asset/CssCollectionOptimizer.php b/src/Asset/CssCollectionOptimizer.php
index 08b75d4..4a9b693 100644
--- a/src/Asset/CssCollectionOptimizer.php
+++ b/src/Asset/CssCollectionOptimizer.php
@@ -8,7 +8,11 @@ use Drupal\Core\Logger\LoggerChannelTrait;
 /**
  * Optimizes CSS assets.
  */
-class CssCollectionOptimizer extends DrupalCssCollectionOptimizer { // @phpstan-ignore-line
+/**
+ * @phpstan-ignore-line
+ */
+class CssCollectionOptimizer extends DrupalCssCollectionOptimizer {
+
 
   use SchemeExtensionTrait;
   use LoggerChannelTrait;
@@ -22,13 +26,16 @@ class CssCollectionOptimizer extends DrupalCssCollectionOptimizer { // @phpstan-
     $file_system = $this->fileSystem;
     $delete_stale = static function ($uri) use ($file_system) {
       // Default stale file threshold is 30 days (2592000 seconds).
-      $stale_file_threshold = \Drupal::config('system.performance')->get('stale_file_threshold') ?? 2592000; // @phpstan-ignore-line
-      if (\Drupal::time()->getRequestTime() - filemtime($uri) > $stale_file_threshold) { // @phpstan-ignore-line
+      // @phpstan-ignore-line
+      $stale_file_threshold = \Drupal::config('system.performance')->get('stale_file_threshold') ?? 2592000;
+      // @phpstan-ignore-line
+      if (\Drupal::time()->getRequestTime() - filemtime($uri) > $stale_file_threshold) {
         try {
           $file_system->delete($uri);
         }
         catch (\Exception $e) {
-          \Drupal::service('logger.factory')->get('flysystem')->error($e->getMessage()); // @phpstan-ignore-line
+          // @phpstan-ignore-line
+          \Drupal::service('logger.factory')->get('flysystem')->error($e->getMessage());
         }
       }
     };
diff --git a/src/Asset/CssCollectionOptimizerLazy.php b/src/Asset/CssCollectionOptimizerLazy.php
index d6d4a4c..25ed5fb 100644
--- a/src/Asset/CssCollectionOptimizerLazy.php
+++ b/src/Asset/CssCollectionOptimizerLazy.php
@@ -20,7 +20,8 @@ class CssCollectionOptimizerLazy extends DrupalCssCollectionOptimizerLazy {
       $this->fileSystem->deleteRecursive($this->getSchemeForExtension('css') . '://css');
     }
     catch (FileException $fileException) {
-      \Drupal::logger('flysystem')->error($fileException->getMessage()); // @phpstan-ignore-line
+      // @phpstan-ignore-line
+      \Drupal::logger('flysystem')->error($fileException->getMessage());
     }
   }
 
diff --git a/src/Asset/JsCollectionOptimizer.php b/src/Asset/JsCollectionOptimizer.php
index 6374609..61753a4 100644
--- a/src/Asset/JsCollectionOptimizer.php
+++ b/src/Asset/JsCollectionOptimizer.php
@@ -8,7 +8,11 @@ use Drupal\Core\Logger\LoggerChannelTrait;
 /**
  * Optimizes JavaScript assets.
  */
-class JsCollectionOptimizer extends DrupalJsCollectionOptimizer { // @phpstan-ignore-line
+/**
+ * @phpstan-ignore-line
+ */
+class JsCollectionOptimizer extends DrupalJsCollectionOptimizer {
+
 
   use SchemeExtensionTrait;
   use LoggerChannelTrait;
@@ -22,13 +26,16 @@ class JsCollectionOptimizer extends DrupalJsCollectionOptimizer { // @phpstan-ig
     $file_system = $this->fileSystem;
     $delete_stale = static function ($uri) use ($file_system) {
       // Default stale file threshold is 30 days (2592000 seconds).
-      $stale_file_threshold = \Drupal::config('system.performance')->get('stale_file_threshold') ?? 2592000; // @phpstan-ignore-line
-      if (\Drupal::time()->getRequestTime() - filemtime($uri) > $stale_file_threshold) { // @phpstan-ignore-line
+      // @phpstan-ignore-line
+      $stale_file_threshold = \Drupal::config('system.performance')->get('stale_file_threshold') ?? 2592000;
+      // @phpstan-ignore-line
+      if (\Drupal::time()->getRequestTime() - filemtime($uri) > $stale_file_threshold) {
         try {
           $file_system->delete($uri);
         }
         catch (\Exception $e) {
-          \Drupal::service('logger.factory')->get('flysystem')->error($e->getMessage()); // @phpstan-ignore-line
+          // @phpstan-ignore-line
+          \Drupal::service('logger.factory')->get('flysystem')->error($e->getMessage());
         }
       }
     };
diff --git a/src/Asset/JsCollectionOptimizerLazy.php b/src/Asset/JsCollectionOptimizerLazy.php
index 64ee567..e703dbf 100644
--- a/src/Asset/JsCollectionOptimizerLazy.php
+++ b/src/Asset/JsCollectionOptimizerLazy.php
@@ -20,7 +20,8 @@ class JsCollectionOptimizerLazy extends DrupalJsCollectionOptimizerLazy {
       $this->fileSystem->deleteRecursive($this->getSchemeForExtension('js') . '://js');
     }
     catch (FileException $fileException) {
-      \Drupal::logger('flysystem')->error($fileException->getMessage()); // @phpstan-ignore-line
+      // @phpstan-ignore-line
+      \Drupal::logger('flysystem')->error($fileException->getMessage());
     }
   }
 
diff --git a/tests/src/Unit/FlysystemServiceProviderTest.php b/tests/src/Unit/FlysystemServiceProviderTest.php
index 0c438f6..e241548 100644
--- a/tests/src/Unit/FlysystemServiceProviderTest.php
+++ b/tests/src/Unit/FlysystemServiceProviderTest.php
@@ -97,10 +97,12 @@ class FlysystemServiceProviderTest extends UnitTestCase {
     (new FlysystemServiceProvider())->register($this->container);
     $this->assertSame(AssetDumper::class, $this->container->getDefinition('asset.js.dumper')->getClass());
 
-    $this->container->register('asset.js.collection_optimizer', JsCollectionOptimizer::class); // @phpstan-ignore-line
+    // @phpstan-ignore-line
+    $this->container->register('asset.js.collection_optimizer', JsCollectionOptimizer::class);
     (new FlysystemServiceProvider())->register($this->container);
     $this->assertSame(AssetDumper::class, $this->container->getDefinition('asset.js.dumper')->getClass());
-    $this->assertSame(JsCollectionOptimizer::class, $this->container->getDefinition('asset.js.collection_optimizer') ->getClass()); // @phpstan-ignore-line
+    // @phpstan-ignore-line
+    $this->assertSame(JsCollectionOptimizer::class, $this->container->getDefinition('asset.js.collection_optimizer')->getClass());
 
     // A successful swap.
     new Settings([
@@ -122,7 +124,8 @@ class FlysystemServiceProviderTest extends UnitTestCase {
   public function testSwappingCssServices() {
     // Test swapping the asset dumper.
     $this->container->register('asset.css.dumper', AssetDumper::class);
-    $this->container->register('asset.css.collection_optimizer', CssCollectionOptimizer::class); // @phpstan-ignore-line
+    // @phpstan-ignore-line
+    $this->container->register('asset.css.collection_optimizer', CssCollectionOptimizer::class);
     $this->container->register('asset.css.optimizer', CssOptimizer::class);
 
     new Settings([
