diff --git a/src/Flysystem/Adapter/DrupalCacheAdapter.php b/src/Flysystem/Adapter/DrupalCacheAdapter.php
index 3f2a05f..b2a9c3b 100644
--- a/src/Flysystem/Adapter/DrupalCacheAdapter.php
+++ b/src/Flysystem/Adapter/DrupalCacheAdapter.php
@@ -50,7 +50,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function write($path, $contents, Config $config) {
+  public function write($path, $contents, Config $config): array|false {
     $metadata = $this->adapter->write($path, $contents, $config);
 
     return $this->updateMetadata($path, $metadata);
@@ -59,7 +59,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function writeStream($path, $resource, Config $config) {
+  public function writeStream($path, $resource, Config $config): array|false {
     $metadata = $this->adapter->writeStream($path, $resource, $config);
 
     return $this->updateMetadata($path, $metadata);
@@ -68,7 +68,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function update($path, $contents, Config $config) {
+  public function update($path, $contents, Config $config): array|false {
     $metadata = $this->adapter->update($path, $contents, $config);
 
     return $this->updateMetadata($path, $metadata);
@@ -77,7 +77,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function updateStream($path, $resource, Config $config) {
+  public function updateStream($path, $resource, Config $config): array|false {
     $metadata = $this->adapter->updateStream($path, $resource, $config);
 
     return $this->updateMetadata($path, $metadata);
@@ -86,7 +86,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function rename($path, $newpath) {
+  public function rename($path, $newpath): bool {
     $result = $this->adapter->rename($path, $newpath);
 
     if ($result) {
@@ -102,7 +102,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function copy($path, $newpath) {
+  public function copy($path, $newpath): bool {
     $result = $this->adapter->copy($path, $newpath);
 
     if ($result) {
@@ -117,7 +117,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function delete($path) {
+  public function delete($path): bool {
     $result = $this->adapter->delete($path);
 
     if ($result) {
@@ -130,7 +130,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function deleteDir($dirname) {
+  public function deleteDir($dirname): bool {
     // Before the delete we need to know what files are in the directory.
     $contents = $this->adapter->listContents($dirname, TRUE);
 
@@ -147,7 +147,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function createDir($dirname, Config $config) {
+  public function createDir($dirname, Config $config): array|false {
     $metadata = $this->adapter->createDir($dirname, $config);
 
     // Warm the metadata cache.
@@ -163,7 +163,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function setVisibility($path, $visibility) {
+  public function setVisibility($path, $visibility): array|false {
     $metadata = $this->adapter->setVisibility($path, $visibility);
 
     return $this->updateMetadata($path, $metadata);
@@ -172,7 +172,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function has($path) {
+  public function has($path): array|bool|null {
     if ($this->cacheItemBackend->has($path)) {
       return TRUE;
     }
@@ -185,21 +185,21 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function read($path) {
+  public function read($path): array|false {
     return $this->adapter->read($path);
   }
 
   /**
    * {@inheritdoc}
    */
-  public function readStream($path) {
+  public function readStream($path): array|false {
     return $this->adapter->readStream($path);
   }
 
   /**
    * {@inheritdoc}
    */
-  public function listContents($directory = '', $recursive = FALSE) {
+  public function listContents($directory = '', $recursive = FALSE): array {
     // Don't cache directory listings to avoid having to keep track of
     // incomplete cache entries.
     // @todo This could be a good place for a microcache?
@@ -209,7 +209,7 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function getMetadata($path) {
+  public function getMetadata($path): array|false {
     $item = $this->cacheItemBackend->load($path);
 
     if ($metadata = $item->getMetadata()) {
@@ -226,28 +226,28 @@ class DrupalCacheAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function getSize($path) {
+  public function getSize($path): array|false {
     return $this->fetchMetadataKey($path, 'size');
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getMimetype($path) {
+  public function getMimetype($path): array|false {
     return $this->fetchMetadataKey($path, 'mimetype');
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getTimestamp($path) {
+  public function getTimestamp($path): array|false {
     return $this->fetchMetadataKey($path, 'timestamp');
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getVisibility($path) {
+  public function getVisibility($path): array|false {
     return $this->fetchMetadataKey($path, 'visibility');
   }
 
diff --git a/src/Flysystem/Adapter/MissingAdapter.php b/src/Flysystem/Adapter/MissingAdapter.php
index 0ae9323..e9d6260 100644
--- a/src/Flysystem/Adapter/MissingAdapter.php
+++ b/src/Flysystem/Adapter/MissingAdapter.php
@@ -13,133 +13,133 @@ class MissingAdapter implements AdapterInterface {
   /**
    * {@inheritdoc}
    */
-  public function copy($path, $newpath) {
+  public function copy($path, $newpath): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function createDir($dirname, Config $config) {
+  public function createDir($dirname, Config $config): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function delete($path) {
+  public function delete($path): bool {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function deleteDir($dirname) {
+  public function deleteDir($dirname): bool {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function listContents($directory = '', $recursive = FALSE) {
+  public function listContents($directory = '', $recursive = FALSE): array {
     return [];
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getMetadata($path) {
+  public function getMetadata($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getMimetype($path) {
+  public function getMimetype($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getSize($path) {
+  public function getSize($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getTimestamp($path) {
+  public function getTimestamp($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function getVisibility($path) {
+  public function getVisibility($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function has($path) {
+  public function has($path): array|bool|null {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function setVisibility($path, $visibility) {
+  public function setVisibility($path, $visibility): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function update($path, $contents, Config $config) {
+  public function update($path, $contents, Config $config): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function updateStream($path, $resource, Config $config) {
+  public function updateStream($path, $resource, Config $config): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function read($path) {
+  public function read($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function readStream($path) {
+  public function readStream($path): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function rename($path, $newpath) {
+  public function rename($path, $newpath): bool {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function write($path, $contents, Config $config) {
+  public function write($path, $contents, Config $config): array|false {
     return FALSE;
   }
 
   /**
    * {@inheritdoc}
    */
-  public function writeStream($path, $resource, Config $config) {
+  public function writeStream($path, $resource, Config $config): array|false {
     return FALSE;
   }
 
diff --git a/src/StreamWrapper/Plugin/Stat.php b/src/StreamWrapper/Plugin/Stat.php
index 41b31a9..837d6c5 100644
--- a/src/StreamWrapper/Plugin/Stat.php
+++ b/src/StreamWrapper/Plugin/Stat.php
@@ -68,7 +68,7 @@ class Stat extends AbstractPlugin {
   /**
    * {@inheritdoc}
    */
-  public function getMethod() {
+  public function getMethod(): string {
     return 'stat';
   }
 
